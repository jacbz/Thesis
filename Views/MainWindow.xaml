<controls:MetroWindow
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
        xmlns:fa5="http://schemas.fontawesome.com/icons/"
        xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:view="clr-namespace:Thesis.Views"
        xmlns:vertexTypes="clr-namespace:Thesis.Models.VertexTypes"
        x:Class="Thesis.Views.MainWindow"
        mc:Ignorable="d"
        Title="Thesis" Height="950" Width="1600" Icon="../icon.ico" WindowStartupLocation="CenterScreen">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!--Left-->
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="200" />
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal" Grid.Row="0" Margin="8">
                <Button x:Name="loadFileButton" VerticalAlignment="Center" DockPanel.Dock="Right" HorizontalAlignment="Right" Click="LoadFileButton_Click">
                    <StackPanel Orientation="Horizontal">
                        <fa5:SvgAwesome Icon="Solid_FileImport"/>
                        <TextBlock><Run Text="Load file"/></TextBlock>
                    </StackPanel>
                </Button>
                <Label x:Name="pathLabel" Content="No file selected" VerticalAlignment="Center" FontStyle="Italic"/>
            </StackPanel>

            <syncfusion:SfSpreadsheet Grid.Row="1" x:Name="spreadsheet" Opacity="0.2" PropertyChanged="Spreadsheet_PropertyChanged" WorkbookLoaded="Spreadsheet_WorkbookLoaded"/>

            <GridSplitter Grid.Row="2"  HorizontalAlignment="Stretch" />

            <TabControl Grid.Row="3" controls:ControlsHelper.HeaderFontSize="13" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="0,2,2,0">
                <TabItem x:Name="toolboxTab" Header="Toolbox" >
                    <StackPanel x:Name="toolboxContent" Orientation="Vertical" Opacity="0.3" IsEnabled="False">
                        <TextBlock Margin="6">
                            <TextBlock FontWeight="Bold" Visibility="{Binding Path=IsExternal, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" FontSize="16" Text="External" Padding="4,0" Foreground="White" Background="{StaticResource ExternalColorBrush}"/>
                            <TextBlock FontWeight="Bold" FontSize="16">
                                <TextBlock x:Name="toolboxType" Padding="4,0" Margin="0,0,4,0">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Converter={StaticResource TypeOfConverter}}" Value="Class" >
                                                    <Setter Property="Foreground" Value="Black"/>
                                                    <Setter Property="Background" Value="{Binding Color, Converter={StaticResource ColorToSolidBrushConverter}}"/>
                                                    <Setter Property="Text" Value="{Binding Name}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Converter={StaticResource TypeOfConverter}}" Value="RangeVertex" >
                                                    <Setter Property="Background" Value="{StaticResource RangeColorBrush}"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                    <Setter Property="Text" Value="Range"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding NodeType}" Value="{x:Static vertexTypes:NodeType.Formula}" >
                                                    <Setter Property="Background" Value="{StaticResource FormulaColorBrush}"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                    <Setter Property="Text" Value="Formula"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding NodeType}" Value="{x:Static vertexTypes:NodeType.OutputField}" >
                                                    <Setter Property="Background" Value="{StaticResource OutputColorBrush}"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                    <Setter Property="Text" Value="Output field"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding NodeType}" Value="{x:Static vertexTypes:NodeType.Constant}" >
                                                    <Setter Property="Background" Value="{StaticResource ConstantColorBrush}"/>
                                                    <Setter Property="Foreground" Value="White"/>
                                                    <Setter Property="Text" Value="Constant"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding NodeType}" Value="{x:Static vertexTypes:NodeType.None}" >
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text="{Binding StringAddress}"/>
                            </TextBlock>
                        </TextBlock>
                        
                    <Grid Margin="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="52" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="6"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="6"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="6"/>
                            <RowDefinition Height="26"/>
                            <RowDefinition Height="6"/>
                            <RowDefinition Height="26"/>
                        </Grid.RowDefinitions>
                        
                        <TextBlock Text="Type:" Grid.Row="0" VerticalAlignment="Center"/>
                        <TextBlock VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" FontWeight="Bold">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Converter={StaticResource TypeOfConverter}}" Value="Class" >
                                                <Setter Property="Text" Value="Class"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Converter={StaticResource TypeOfConverter}}" Value="RangeVertex" >
                                                <Setter Property="Text" Value="Range"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Converter={StaticResource TypeOfConverter}}" Value="CellVertex" >
                                                <Setter Property="Text" Value="{Binding CellType}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                        </TextBlock>

                        <TextBlock Text="Name:" Grid.Row="2" VerticalAlignment="Center"/>
                        <TextBox Text="{Binding Name, Mode=TwoWay}" Grid.Row="2" Grid.Column="1"/>

                        <TextBlock Text="Value:" Grid.Row="4" VerticalAlignment="Center" Visibility="{Binding Converter={StaticResource CellVertexVisibilityConverter}}"/>
                        <TextBox Text="{Binding Value}" Grid.Row="4" Grid.Column="1" IsReadOnly="True" Visibility="{Binding Converter={StaticResource CellVertexVisibilityConverter}}"/>   
                        
                        <TextBlock Text="Formula:" Grid.Row="6" VerticalAlignment="Center" Visibility="{Binding Converter={StaticResource CellVertexVisibilityConverter}}"/>
                        <TextBox Text="{Binding Formula}" Grid.Row="6" Grid.Column="1" IsReadOnly="True" Visibility="{Binding Converter={StaticResource CellVertexVisibilityConverter}}"/>  
                    </Grid>
                        
                    </StackPanel>

                </TabItem>
                <TabItem x:Name="logTab" Header="Log">
                    <Grid>
                        <view:LogControl x:Name="logControl"/>
                        <Button x:Name="clearLogButton" VerticalAlignment="Top" Height="18" Width="60" Padding="10,0" HorizontalAlignment="Right" Margin="0,0,12,0" Click="ClearLogButton_Click">
                            <StackPanel Orientation="Horizontal">
                                <fa5:SvgAwesome Icon="Regular_TrashAlt" Width="10" Height="10"/>
                                <TextBlock FontSize="10"><Run Text="Clear"/></TextBlock>
                            </StackPanel>
                        </Button>
                    </Grid>
                </TabItem>
                <TabItem x:Name="helpTab" Header="Help">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="130" />
                            <ColumnDefinition Width="32" />
                            <ColumnDefinition Width="130" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="28"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Label FontWeight="Bold">Label classifications:</Label>
                        <StackPanel Grid.Row="1" Orientation="Vertical">
                            <TextBlock FontWeight="Bold" Padding="8" Background="{DynamicResource HeaderColorBrush}" Margin="0,0,0,8" FontFamily="Segoe UI Light">Header</TextBlock>
                            <TextBlock FontWeight="Bold" Padding="8" Background="{DynamicResource AttributeColorBrush}" Margin="0,0,0,8" FontFamily="Segoe UI Light">Attribute</TextBlock>
                            <TextBlock FontWeight="Bold" Padding="8" Background="{DynamicResource DataColorBrush}" FontFamily="Segoe UI Light">Data</TextBlock>
                        </StackPanel>

                        <Label Grid.Column="2" FontWeight="Bold">Node types:</Label>
                        <StackPanel Grid.Column="2" Grid.Row="1" Orientation="Vertical">
                            <Border BorderBrush="{StaticResource ConstantColorBrush}" Margin="0,0,0,6" BorderThickness="3">
                                <TextBlock FontWeight="Bold" Padding="4" FontFamily="Segoe UI Light">Constant</TextBlock>
                            </Border>
                            <Border BorderBrush="{StaticResource FormulaColorBrush}" Margin="0,0,0,6" BorderThickness="3">
                                <TextBlock FontWeight="Bold" Padding="4" FontFamily="Segoe UI Light">Formula</TextBlock>
                            </Border>
                            <Border BorderBrush="{StaticResource OutputColorBrush}" Margin="0,0,0,6" BorderThickness="3">
                                <TextBlock FontWeight="Bold" Padding="4" FontFamily="Segoe UI Light">Output fields</TextBlock>
                            </Border>
                            <Border BorderBrush="{StaticResource RangeColorBrush}" Margin="0,0,0,6" BorderThickness="3">
                                <TextBlock FontWeight="Bold" Padding="4" FontFamily="Segoe UI Light">Range</TextBlock>
                            </Border>
                        </StackPanel>

                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>

        <!--Splitter-->
        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" />

        <!-- Right -->

        <TabControl Grid.Column="2" controls:ControlsHelper.HeaderFontSize="18" BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="0,2,2,0">
            <TabItem x:Name="generateGraphTab" Header="1. Generate graph" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="206" />
                        <RowDefinition Height="5" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Grid.Background>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                        </Grid.Background>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="8" />
                            <ColumnDefinition Width="235" />
                        </Grid.ColumnDefinitions>

                        <StackPanel x:Name="outputFieldsButtons" Grid.Row="0" Orientation="Horizontal" IsEnabled="False">
                            <Label Content="Output fields" Margin="0,0,12,0" FontSize="14" FontWeight="Bold"/>
                            <Button x:Name="selectAllButton" Margin="0,0,4,0" VerticalAlignment="Center" Height="20" Padding="10,0" Click="SelectAllButton_Click">
                                <StackPanel Orientation="Horizontal">
                                    <fa5:SvgAwesome Icon="Regular_CheckSquare" Width="10" Height="10"/>
                                    <TextBlock FontSize="10"><Run Text="Select all"/></TextBlock>
                                </StackPanel>
                            </Button>
                            <Button x:Name="unselectAllButton" VerticalAlignment="Center" Height="20" Padding="10,0" Click="UnselectAllButton_Click">
                                <StackPanel Orientation="Horizontal">
                                    <fa5:SvgAwesome Icon="Regular_Square" Width="10" Height="10"/>
                                    <TextBlock FontSize="10"><Run Text="Unselect all"/></TextBlock>
                                </StackPanel>
                            </Button>
                        </StackPanel>

                        <GridSplitter Grid.RowSpan="2" Grid.Column="1" HorizontalAlignment="Stretch" Background="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Width="2" />

                        <Label x:Name="labelGenerationOptionsLabel" Grid.Column="2" Content="Label generation options" Margin="0,0,12,0" IsEnabled="False" FontSize="14" FontWeight="Bold"/>
                        <Grid x:Name="labelGenerationOptionsGrid" Grid.Row="1" Grid.Column="2" Margin="0,0,5,0" IsEnabled="False" ToolTip="Determines the number of cells allowed between two label regions that can be merged. (0 = the two regions must be adjacent, 1 = the two regions can be one cell apart, etc.)">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="3" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="155" />
                                <ColumnDefinition Width="5" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Label Grid.Row="0" Grid.Column="0" Content="Horizontal merging range:" ToolTip="Determines the number of columns allowed between two label regions that can be merged. (0 = the two regions must be adjacent, 1 = the two regions can be one column apart, etc.)" />
                            <controls:NumericUpDown x:Name="horizontalMergingRangeNum" Grid.Row="0" Grid.Column="2" Value="1" Minimum="1" Maximum="20"/>
                            <Label Grid.Row="2" Grid.Column="0" Content="Vertical merging range:" ToolTip="Determines the number of rows allowed between two label regions that can be merged. (0 = the two regions must be adjacent, 1 = the two regions can be one row apart, etc.)" />
                            <controls:NumericUpDown x:Name="verticalMergingRangeNum" Grid.Row="2" Grid.Column="2" Value="1" Minimum="1" Maximum="20"/>
                            <CheckBox x:Name="mergeOutputFieldLabelsCheckBox" Grid.Row="4" Grid.ColumnSpan="3" Content="  :Merge output field labels" FlowDirection="RightToLeft" HorizontalAlignment="Left" Padding="6,5,5,5" ToolTip=".Determines whether to merge labels that are also output fields into label regions"/>

                            <Label Grid.Row="6" Grid.Column="0" Content="Header association range:" ToolTip="Determines the maximum number of rows that a header region can be away from a data region while still being considered a header for that region." />
                            <controls:NumericUpDown x:Name="headerAssociationRangeNum" Grid.Row="6" Grid.Column="2" Value="3" Minimum="1" Maximum="50"/>
                            <Label Grid.Row="8" Grid.Column="0" Content="Attribute association range:" ToolTip="Determines the maximum number of columns that a attribute region can be away from a data region while still being considered an attribute for that region." />
                            <controls:NumericUpDown x:Name="attributeAssosicationRangeNum" Grid.Row="8" Grid.Column="2" Value="5" Minimum="1" Maximum="50"/>

                        </Grid>

                        <ListView x:Name="outputFieldsListView" IsEnabled="False" Grid.Row="1" HorizontalAlignment="Stretch" BorderThickness="1" BorderBrush="{DynamicResource AccentColorBrush}" TextElement.FontSize="10" SelectionMode="Single" SelectionChanged="OutputFieldsListView_SelectionChanged">
                            <ListView.ItemContainerStyle>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <Setter Property="Height" Value="20" />
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Width="40">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <CheckBox IsChecked="{Binding Include}"/>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Address" Width="55" DisplayMemberBinding="{Binding StringAddress}" />
                                    <GridViewColumn Header="Value" Width="410" DisplayMemberBinding="{Binding Value}" />
                                </GridView>
                            </ListView.View>
                        </ListView>
                        <Border Grid.Row="2" Grid.ColumnSpan="3" Padding="6,6,6,0" >
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,2">
                                <Button x:Name="generateGraphButton" IsEnabled="False" Click="GenerateGraphButton_Click" Margin="0,0,8,0">
                                    <StackPanel Orientation="Horizontal">
                                        <fa5:SvgAwesome Icon="Solid_ProjectDiagram"/>
                                        <TextBlock><Run Text="Generate graph and labels for worksheet"/></TextBlock>
                                    </StackPanel>
                                </Button>
                                <Button x:Name="filterGraphButton" IsEnabled="False" Margin="0,0,8,0" Click="FilterGraphButton_Click">
                                    <StackPanel Orientation="Horizontal">
                                        <fa5:SvgAwesome Icon="Solid_Filter"/>
                                        <TextBlock><Run Text="Filter graph by selected output fields"/></TextBlock>
                                    </StackPanel>
                                </Button>
                                <controls:ProgressRing x:Name="generateGraphProgressRing" IsActive="False" Height="16" Width="16" />
                            </StackPanel>
                        </Border>
                    </Grid>

                    <GridSplitter Grid.Row="1"  HorizontalAlignment="Stretch" />

                    <syncfusion:SfDiagram Grid.Row="3" x:Name="diagram">
                        <syncfusion:SfDiagram.SnapSettings>
                            <syncfusion:SnapSettings SnapConstraints="ShowLines"/>
                        </syncfusion:SfDiagram.SnapSettings>
                    </syncfusion:SfDiagram>
                </Grid>
            </TabItem>

            <TabItem x:Name="generateClassesTab" Header="2. Generate classes" >
                <DockPanel>
                    <Border Padding="2" DockPanel.Dock="Top">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                        </Border.Background>
                        <StackPanel DockPanel.Dock="Top" Orientation="Vertical" Margin="6">
                            <CheckBox x:Name="hideConnectionsCheckbox" Content="Hide connections to static classes" IsEnabled="False"/>
                            <StackPanel Orientation="Horizontal" Margin="0,6,0,0">
                                <Button x:Name="generateClassesButton" IsEnabled="False" Click="GenerateClassesButton_Click" Margin="0,0,8,0">
                                    <StackPanel Orientation="Horizontal">
                                        <fa5:SvgAwesome Icon="Solid_ObjectGroup"/>
                                        <TextBlock><Run Text="Generate classes"/></TextBlock>
                                    </StackPanel>
                                </Button>
                                <controls:ProgressRing x:Name="generateClassesProgressRing" IsActive="False" Height="16" Width="16" />
                            </StackPanel>
                        </StackPanel>
                    </Border>
                    <syncfusion:SfDiagram x:Name="diagram2">
                        <syncfusion:SfDiagram.SnapSettings>
                            <syncfusion:SnapSettings SnapConstraints="ShowLines"/>
                        </syncfusion:SfDiagram.SnapSettings>
                    </syncfusion:SfDiagram>
                </DockPanel>
            </TabItem>

            <TabItem x:Name="generateCodeTab" Header="3. Generate code" >
                <DockPanel>
                    <Border Padding="2" DockPanel.Dock="Top">
                        <Border.Background>
                            <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlColorKey}}"/>
                        </Border.Background>
                        <StackPanel DockPanel.Dock="Top" Orientation="Vertical" Margin="6">
                            <ComboBox x:Name="languageComboBox" Width="300" HorizontalAlignment="Left" SelectedIndex="0" >
                                <ComboBoxItem>C#</ComboBoxItem>
                            </ComboBox>
                            <DockPanel Margin="0,6,0,0" LastChildFill="False">
                                <StackPanel Orientation="Horizontal">
                                    <Button x:Name="generateCodeButton" IsEnabled="False" Click="GenerateCodeButton_Click" Margin="0,0,6,0">
                                        <StackPanel Orientation="Horizontal">
                                            <fa5:SvgAwesome Icon="Solid_Code"/>
                                            <TextBlock><Run Text="Generate code"/></TextBlock>
                                        </StackPanel>
                                    </Button>

                                    <Button x:Name="testCodeButton" IsEnabled="False" Click="TestCodeButton_Click" Margin="0,0,8,0">
                                        <StackPanel Orientation="Horizontal">
                                            <fa5:SvgAwesome Icon="Solid_Play" Width="12" Height="12" />
                                            <TextBlock><Run Text="Test code"/></TextBlock>
                                        </StackPanel>
                                    </Button>

                                    <controls:ProgressRing x:Name="codeGeneratorProgressRing" IsActive="False" Height="16" Width="16" />
                                </StackPanel>

                                <Button x:Name="showTestFrameworkButton" IsEnabled="True" DockPanel.Dock="Right" Click="ShowTestFrameworkButton_Click">
                                    <StackPanel Orientation="Horizontal">
                                        <fa5:SvgAwesome Icon="Regular_WindowRestore" />
                                        <TextBlock><Run Text="Show test framework code"/></TextBlock>
                                    </StackPanel>
                                </Button>
                            </DockPanel>
                        </StackPanel>
                    </Border>

                    <avalonEdit:TextEditor
                        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
                        x:Name="codeTextBox"
                        FontFamily="Consolas"
                        ShowLineNumbers="True"
                        FontSize="10pt"
                        TextChanged="CodeTextBox_TextChanged"
                        WordWrap="True" IsReadOnly="True"/>
                </DockPanel>
            </TabItem>
        </TabControl>

        <StackPanel Orientation="Horizontal" Grid.Column="2" Height="20" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,4,4,0" >
            <controls:ProgressRing x:Name="magicButtonProgressRing" IsActive="False" Height="16" Width="16" Margin="0,0,6,0" MinWidth="16" MinHeight="16" />
            <Button x:Name="magicButton" Padding="10,0" ToolTip="Generate graph, generate classes, generate code, test code – in one click." Click="MagicButton_Click" IsEnabled="False">
                <StackPanel Orientation="Horizontal">
                    <fa5:SvgAwesome Icon="Solid_Magic" Width="12" Height="12"/>
                    <TextBlock FontSize="10">Do <Bold><Underline>everything</Underline></Bold></TextBlock>
                </StackPanel>
            </Button>
        </StackPanel>


    </Grid>
</controls:MetroWindow>
